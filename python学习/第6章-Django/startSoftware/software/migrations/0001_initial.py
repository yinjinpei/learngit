# Generated by Django 2.2.5 on 2021-03-11 21:16

from django.db import migrations, models
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userName', models.CharField(default=None, max_length=128)),
                ('appName', models.CharField(max_length=20)),
                ('appDir', models.CharField(max_length=100)),
                ('remark', models.CharField(default=None, max_length=100)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'appinfo',
            },
            managers=[
                ('apps', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ApplicantDeploymentInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loginUser', models.CharField(max_length=128)),
                ('systemName', models.CharField(max_length=128)),
                ('systemType', models.CharField(max_length=128)),
                ('applicant', models.CharField(max_length=128)),
                ('applicantTime', models.CharField(max_length=128)),
                ('reasonType', models.CharField(max_length=128, null=True)),
                ('reason', models.CharField(max_length=256)),
                ('modifyTime', models.CharField(max_length=128)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'applicantDeploymentInfo',
            },
            managers=[
                ('applicantDeployment', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DomainInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(max_length=128, unique=True)),
                ('domain_manager_email', models.EmailField(max_length=254)),
                ('test_manager_email', models.EmailField(max_length=254)),
                ('domain_team_email', models.EmailField(max_length=254)),
                ('version_manager_email', models.EmailField(max_length=254)),
                ('user_name', models.CharField(max_length=128)),
                ('version_data', models.CharField(max_length=1024)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'domaininfo',
            },
            managers=[
                ('domains', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LockBaseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userName', models.CharField(default=None, max_length=20)),
                ('pathName', models.CharField(max_length=128)),
                ('islock', models.BooleanField(default=False)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'lockbaseinfo',
            },
            managers=[
                ('lockbase', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ManagerDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=128)),
                ('password', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'managerdate',
            },
            managers=[
                ('managers', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MyGitlabInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loginUser', models.CharField(max_length=128)),
                ('blongTo', models.CharField(max_length=128)),
                ('packageName', models.CharField(max_length=128)),
                ('appid', models.CharField(max_length=128)),
                ('gitlabBase', models.CharField(max_length=128)),
                ('projectId', models.CharField(max_length=128)),
                ('wizardSpace', models.CharField(max_length=128)),
                ('system', models.CharField(max_length=128)),
                ('person', models.CharField(max_length=128)),
                ('type', models.CharField(max_length=128)),
                ('remark', models.CharField(max_length=128)),
                ('modifyTime', models.CharField(max_length=128)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'myGitlabInfo',
            },
            managers=[
                ('myGitlab', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MyServerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loginUser', models.CharField(max_length=128)),
                ('blongTo', models.CharField(max_length=128)),
                ('domainName', models.CharField(max_length=128)),
                ('envType', models.CharField(max_length=128)),
                ('appid', models.CharField(max_length=128)),
                ('ip', models.CharField(max_length=128)),
                ('applicantName', models.CharField(max_length=128)),
                ('applicantType', models.CharField(max_length=128)),
                ('deployPlatform', models.CharField(max_length=128)),
                ('remark', models.CharField(max_length=128)),
                ('modifyTime', models.CharField(max_length=128)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'myServerInfo',
            },
            managers=[
                ('myServer', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='NewUnblockedVersionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=128)),
                ('month', models.CharField(max_length=128)),
                ('team', models.CharField(max_length=128)),
                ('version_name', models.CharField(max_length=128)),
                ('subsystem', models.CharField(max_length=128)),
                ('content', models.CharField(max_length=1024)),
                ('version_manager', models.CharField(max_length=128)),
                ('version_leader', models.CharField(max_length=128)),
                ('test_leader', models.CharField(max_length=128)),
                ('version_type', models.CharField(max_length=128)),
                ('unblocked_datetime', models.CharField(max_length=128)),
                ('blocked_datetime', models.CharField(max_length=128)),
                ('unblocked_type', models.CharField(max_length=128)),
                ('unblocked_reason', models.CharField(max_length=2048)),
                ('remark', models.CharField(max_length=1024)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'newunblockedversionInfo',
            },
            managers=[
                ('newunblockedversion', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PrdDataBaseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loginUser', models.CharField(max_length=128)),
                ('blongTo', models.CharField(max_length=128)),
                ('domain', models.CharField(max_length=128)),
                ('dataBaseLink', models.CharField(max_length=128)),
                ('dataBaseName', models.CharField(max_length=128)),
                ('userName', models.CharField(max_length=128)),
                ('remark', models.CharField(max_length=128)),
                ('envType', models.CharField(max_length=128)),
                ('modifyTime', models.CharField(max_length=128)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'prdDataBaseInfo',
            },
            managers=[
                ('prddatabase', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SelfDeploymentInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loginUser', models.CharField(max_length=128)),
                ('systemName', models.CharField(max_length=128)),
                ('role', models.CharField(max_length=128, null=True)),
                ('deploymentPersonnel', models.CharField(max_length=128)),
                ('deploymentTime', models.CharField(max_length=128)),
                ('modifyTime', models.CharField(max_length=128)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'selfDeploymentInfo',
            },
            managers=[
                ('selfDeployment', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TimedTaskForMoveCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userName', models.CharField(max_length=128)),
                ('domainName', models.CharField(max_length=128)),
                ('zoneName', models.CharField(max_length=128)),
                ('branch', models.CharField(max_length=128)),
                ('projectId', models.CharField(max_length=128)),
                ('startTime', models.DateTimeField()),
                ('endTime', models.DateTimeField()),
                ('intervalTime', models.IntegerField()),
                ('timeType', models.CharField(max_length=128)),
                ('taskId', models.IntegerField(default=None)),
                ('taskStatus', models.CharField(default=None, max_length=128)),
                ('taskObject', models.CharField(default=None, max_length=128)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'timedTaskForMoveCard',
            },
            managers=[
                ('timedTask', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TimingData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execTime', models.DateTimeField()),
                ('setTime', models.DateTimeField()),
                ('serverIP', models.CharField(max_length=20)),
                ('clientJobID', models.CharField(max_length=128)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'timingdata',
            },
            managers=[
                ('timers', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UatDataBaseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loginUser', models.CharField(max_length=128)),
                ('blongTo', models.CharField(max_length=128)),
                ('domain', models.CharField(max_length=128)),
                ('dataBaseLink', models.CharField(max_length=128)),
                ('dataBaseName', models.CharField(max_length=128)),
                ('userName', models.CharField(max_length=128)),
                ('remark', models.CharField(max_length=128)),
                ('envType', models.CharField(max_length=128)),
                ('modifyTime', models.CharField(max_length=128)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'uatDataBaseInfo',
            },
            managers=[
                ('uatdatabase', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UnblockedVersionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=128)),
                ('month', models.CharField(max_length=128)),
                ('team', models.CharField(max_length=128)),
                ('version_number', models.CharField(max_length=128)),
                ('subsystem', models.CharField(max_length=128)),
                ('version_name', models.CharField(max_length=128)),
                ('content', models.CharField(max_length=512)),
                ('version_compiler', models.CharField(max_length=128)),
                ('version_leader', models.CharField(max_length=128)),
                ('test_leader', models.CharField(max_length=128)),
                ('development_team', models.CharField(max_length=128)),
                ('version_type', models.CharField(max_length=128)),
                ('unblocked_datetime', models.CharField(max_length=128)),
                ('blocked_datetime', models.CharField(max_length=128)),
                ('unblocked_type', models.CharField(max_length=128)),
                ('unblocked_reason', models.CharField(max_length=1024)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'unblockedversionInfo',
            },
            managers=[
                ('unblockedversion', django.db.models.manager.Manager()),
            ],
        ),
    ]
